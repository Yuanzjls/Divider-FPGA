vendor_name = ModelSim
source_file = 1, D:/University/Uwindsor/FPGA/Assignement1/DividerSequence/Divider.vhd
source_file = 1, D:/University/Uwindsor/FPGA/Assignement1/DividerSequence/db/Divider.cbx.xml
source_file = 1, d:/altera/13.0sp1/quartus/libraries/vhdl/ieee/prmtvs_b.vhd
source_file = 1, d:/altera/13.0sp1/quartus/libraries/vhdl/ieee/prmtvs_p.vhd
source_file = 1, d:/altera/13.0sp1/quartus/libraries/vhdl/ieee/timing_b.vhd
source_file = 1, d:/altera/13.0sp1/quartus/libraries/vhdl/ieee/timing_p.vhd
design_name = Divider
instance = comp, \Signal_Remainder[11]\, Signal_Remainder[11], Divider, 1
instance = comp, \Mux0~16\, Mux0~16, Divider, 1
instance = comp, \Mux0~20\, Mux0~20, Divider, 1
instance = comp, \Add2~17\, Add2~17, Divider, 1
instance = comp, \Add0~81\, Add0~81, Divider, 1
instance = comp, \Signal_Remainder[1]~1\, Signal_Remainder[1]~1, Divider, 1
instance = comp, \Signal_Remainder~15\, Signal_Remainder~15, Divider, 1
instance = comp, \Clk~I\, Clk, Divider, 1
instance = comp, \Dividen_In[28]~I\, Dividen_In[28], Divider, 1
instance = comp, \Dividen_In[24]~I\, Dividen_In[24], Divider, 1
instance = comp, \Dividen_In[20]~I\, Dividen_In[20], Divider, 1
instance = comp, \Dividen_In[12]~I\, Dividen_In[12], Divider, 1
instance = comp, \Dividen_In[14]~I\, Dividen_In[14], Divider, 1
instance = comp, \Dividen_In[13]~I\, Dividen_In[13], Divider, 1
instance = comp, \Dividen_In[8]~I\, Dividen_In[8], Divider, 1
instance = comp, \Dividen_In[10]~I\, Dividen_In[10], Divider, 1
instance = comp, \Dividen_In[9]~I\, Dividen_In[9], Divider, 1
instance = comp, \Dividen_In[11]~I\, Dividen_In[11], Divider, 1
instance = comp, \Dividen_In[15]~I\, Dividen_In[15], Divider, 1
instance = comp, \Dividen_In[4]~I\, Dividen_In[4], Divider, 1
instance = comp, \Dividen_In[0]~I\, Dividen_In[0], Divider, 1
instance = comp, \Clk~clkctrl\, Clk~clkctrl, Divider, 1
instance = comp, \Start~I\, Start, Divider, 1
instance = comp, \State~13\, State~13, Divider, 1
instance = comp, \State.InitState\, State.InitState, Divider, 1
instance = comp, \CNT~2\, CNT~2, Divider, 1
instance = comp, \CNT[0]\, CNT[0], Divider, 1
instance = comp, \Add1~1\, Add1~1, Divider, 1
instance = comp, \CNT~3\, CNT~3, Divider, 1
instance = comp, \CNT[1]\, CNT[1], Divider, 1
instance = comp, \Add1~0\, Add1~0, Divider, 1
instance = comp, \CNT~4\, CNT~4, Divider, 1
instance = comp, \CNT[2]\, CNT[2], Divider, 1
instance = comp, \Add1~2\, Add1~2, Divider, 1
instance = comp, \CNT~5\, CNT~5, Divider, 1
instance = comp, \CNT[3]\, CNT[3], Divider, 1
instance = comp, \Add1~3\, Add1~3, Divider, 1
instance = comp, \CNT~1\, CNT~1, Divider, 1
instance = comp, \CNT[4]\, CNT[4], Divider, 1
instance = comp, \Add1~4\, Add1~4, Divider, 1
instance = comp, \CNT~6\, CNT~6, Divider, 1
instance = comp, \CNT[5]\, CNT[5], Divider, 1
instance = comp, \Decoder0~0\, Decoder0~0, Divider, 1
instance = comp, \Equal0~0\, Equal0~0, Divider, 1
instance = comp, \Selector2~0\, Selector2~0, Divider, 1
instance = comp, \State.ShiftState\, State.ShiftState, Divider, 1
instance = comp, \CNT[1]~0\, CNT[1]~0, Divider, 1
instance = comp, \Selector4~0\, Selector4~0, Divider, 1
instance = comp, \State.CheckState\, State.CheckState, Divider, 1
instance = comp, \Selector3~0\, Selector3~0, Divider, 1
instance = comp, \State.DoneState\, State.DoneState, Divider, 1
instance = comp, \State.DoneState~clkctrl\, State.DoneState~clkctrl, Divider, 1
instance = comp, \Selector0~0\, Selector0~0, Divider, 1
instance = comp, \State.AddState\, State.AddState, Divider, 1
instance = comp, \Divider_In[30]~I\, Divider_In[30], Divider, 1
instance = comp, \Signal_Divider[30]\, Signal_Divider[30], Divider, 1
instance = comp, \Divider_In[29]~I\, Divider_In[29], Divider, 1
instance = comp, \Signal_Divider[29]\, Signal_Divider[29], Divider, 1
instance = comp, \Divider_In[27]~I\, Divider_In[27], Divider, 1
instance = comp, \Signal_Divider[27]\, Signal_Divider[27], Divider, 1
instance = comp, \Divider_In[26]~I\, Divider_In[26], Divider, 1
instance = comp, \Signal_Divider[26]\, Signal_Divider[26], Divider, 1
instance = comp, \Divider_In[24]~I\, Divider_In[24], Divider, 1
instance = comp, \Signal_Divider[24]\, Signal_Divider[24], Divider, 1
instance = comp, \Divider_In[23]~I\, Divider_In[23], Divider, 1
instance = comp, \Signal_Divider[23]\, Signal_Divider[23], Divider, 1
instance = comp, \Divider_In[21]~I\, Divider_In[21], Divider, 1
instance = comp, \Signal_Divider[21]\, Signal_Divider[21], Divider, 1
instance = comp, \Divider_In[19]~I\, Divider_In[19], Divider, 1
instance = comp, \Signal_Divider[19]\, Signal_Divider[19], Divider, 1
instance = comp, \Divider_In[18]~I\, Divider_In[18], Divider, 1
instance = comp, \Signal_Divider[18]\, Signal_Divider[18], Divider, 1
instance = comp, \Divider_In[17]~I\, Divider_In[17], Divider, 1
instance = comp, \Signal_Divider[17]\, Signal_Divider[17], Divider, 1
instance = comp, \Divider_In[16]~I\, Divider_In[16], Divider, 1
instance = comp, \Signal_Divider[16]\, Signal_Divider[16], Divider, 1
instance = comp, \Divider_In[14]~I\, Divider_In[14], Divider, 1
instance = comp, \Signal_Divider[14]\, Signal_Divider[14], Divider, 1
instance = comp, \Divider_In[13]~I\, Divider_In[13], Divider, 1
instance = comp, \Signal_Divider[13]\, Signal_Divider[13], Divider, 1
instance = comp, \Divider_In[12]~I\, Divider_In[12], Divider, 1
instance = comp, \Signal_Divider[12]\, Signal_Divider[12], Divider, 1
instance = comp, \Divider_In[11]~I\, Divider_In[11], Divider, 1
instance = comp, \Signal_Divider[11]\, Signal_Divider[11], Divider, 1
instance = comp, \Divider_In[9]~I\, Divider_In[9], Divider, 1
instance = comp, \Signal_Divider[9]\, Signal_Divider[9], Divider, 1
instance = comp, \Divider_In[5]~I\, Divider_In[5], Divider, 1
instance = comp, \Signal_Divider[5]\, Signal_Divider[5], Divider, 1
instance = comp, \Divider_In[4]~I\, Divider_In[4], Divider, 1
instance = comp, \Signal_Divider[4]\, Signal_Divider[4], Divider, 1
instance = comp, \Divider_In[2]~I\, Divider_In[2], Divider, 1
instance = comp, \Signal_Divider[2]\, Signal_Divider[2], Divider, 1
instance = comp, \Divider_In[0]~I\, Divider_In[0], Divider, 1
instance = comp, \Signal_Divider[0]\, Signal_Divider[0], Divider, 1
instance = comp, \Add0~1\, Add0~1, Divider, 1
instance = comp, \Add2~1\, Add2~1, Divider, 1
instance = comp, \Signal_Remainder~0\, Signal_Remainder~0, Divider, 1
instance = comp, \Signal_Remainder~2\, Signal_Remainder~2, Divider, 1
instance = comp, \Dividen_In[22]~I\, Dividen_In[22], Divider, 1
instance = comp, \Dividen_In[23]~I\, Dividen_In[23], Divider, 1
instance = comp, \Dividen_In[18]~I\, Dividen_In[18], Divider, 1
instance = comp, \Dividen_In[19]~I\, Dividen_In[19], Divider, 1
instance = comp, \Dividen_In[16]~I\, Dividen_In[16], Divider, 1
instance = comp, \Dividen_In[17]~I\, Dividen_In[17], Divider, 1
instance = comp, \Mux0~8\, Mux0~8, Divider, 1
instance = comp, \Dividen_In[21]~I\, Dividen_In[21], Divider, 1
instance = comp, \Mux0~12\, Mux0~12, Divider, 1
instance = comp, \Dividen_In[6]~I\, Dividen_In[6], Divider, 1
instance = comp, \Dividen_In[7]~I\, Dividen_In[7], Divider, 1
instance = comp, \Dividen_In[2]~I\, Dividen_In[2], Divider, 1
instance = comp, \Dividen_In[3]~I\, Dividen_In[3], Divider, 1
instance = comp, \Dividen_In[1]~I\, Dividen_In[1], Divider, 1
instance = comp, \Mux0~24\, Mux0~24, Divider, 1
instance = comp, \Dividen_In[5]~I\, Dividen_In[5], Divider, 1
instance = comp, \Mux0~28\, Mux0~28, Divider, 1
instance = comp, \Dividen_In[30]~I\, Dividen_In[30], Divider, 1
instance = comp, \Dividen_In[31]~I\, Dividen_In[31], Divider, 1
instance = comp, \Dividen_In[26]~I\, Dividen_In[26], Divider, 1
instance = comp, \Dividen_In[27]~I\, Dividen_In[27], Divider, 1
instance = comp, \Dividen_In[25]~I\, Dividen_In[25], Divider, 1
instance = comp, \Mux0~0\, Mux0~0, Divider, 1
instance = comp, \Dividen_In[29]~I\, Dividen_In[29], Divider, 1
instance = comp, \Mux0~4\, Mux0~4, Divider, 1
instance = comp, \Mux0~32\, Mux0~32, Divider, 1
instance = comp, \Signal_Remainder~3\, Signal_Remainder~3, Divider, 1
instance = comp, \Signal_Remainder[0]\, Signal_Remainder[0], Divider, 1
instance = comp, \Add2~5\, Add2~5, Divider, 1
instance = comp, \Divider_In[1]~I\, Divider_In[1], Divider, 1
instance = comp, \Signal_Divider[1]\, Signal_Divider[1], Divider, 1
instance = comp, \Add0~5\, Add0~5, Divider, 1
instance = comp, \Signal_Remainder~4\, Signal_Remainder~4, Divider, 1
instance = comp, \Signal_Remainder[1]~5\, Signal_Remainder[1]~5, Divider, 1
instance = comp, \Signal_Remainder[1]\, Signal_Remainder[1], Divider, 1
instance = comp, \Add0~9\, Add0~9, Divider, 1
instance = comp, \Add2~9\, Add2~9, Divider, 1
instance = comp, \Signal_Remainder~6\, Signal_Remainder~6, Divider, 1
instance = comp, \Signal_Remainder[2]\, Signal_Remainder[2], Divider, 1
instance = comp, \Divider_In[3]~I\, Divider_In[3], Divider, 1
instance = comp, \Signal_Divider[3]\, Signal_Divider[3], Divider, 1
instance = comp, \Add2~13\, Add2~13, Divider, 1
instance = comp, \Add0~13\, Add0~13, Divider, 1
instance = comp, \Signal_Remainder~7\, Signal_Remainder~7, Divider, 1
instance = comp, \Signal_Remainder[3]\, Signal_Remainder[3], Divider, 1
instance = comp, \Add0~17\, Add0~17, Divider, 1
instance = comp, \Signal_Remainder~8\, Signal_Remainder~8, Divider, 1
instance = comp, \Signal_Remainder[4]\, Signal_Remainder[4], Divider, 1
instance = comp, \Add0~21\, Add0~21, Divider, 1
instance = comp, \Add2~21\, Add2~21, Divider, 1
instance = comp, \Signal_Remainder~9\, Signal_Remainder~9, Divider, 1
instance = comp, \Signal_Remainder[5]\, Signal_Remainder[5], Divider, 1
instance = comp, \Divider_In[6]~I\, Divider_In[6], Divider, 1
instance = comp, \Signal_Divider[6]\, Signal_Divider[6], Divider, 1
instance = comp, \Add2~25\, Add2~25, Divider, 1
instance = comp, \Signal_Remainder~10\, Signal_Remainder~10, Divider, 1
instance = comp, \Signal_Remainder[6]\, Signal_Remainder[6], Divider, 1
instance = comp, \Add0~25\, Add0~25, Divider, 1
instance = comp, \Signal_Remainder~10DUPLICATE\, Signal_Remainder~10DUPLICATE, Divider, 1
instance = comp, \Signal_Remainder[6]~DUPLICATE\, Signal_Remainder[6]~DUPLICATE, Divider, 1
instance = comp, \Divider_In[7]~I\, Divider_In[7], Divider, 1
instance = comp, \Signal_Divider[7]\, Signal_Divider[7], Divider, 1
instance = comp, \Add2~29\, Add2~29, Divider, 1
instance = comp, \Signal_Remainder~11\, Signal_Remainder~11, Divider, 1
instance = comp, \Signal_Remainder[7]\, Signal_Remainder[7], Divider, 1
instance = comp, \Add0~29\, Add0~29, Divider, 1
instance = comp, \Signal_Remainder~11DUPLICATE\, Signal_Remainder~11DUPLICATE, Divider, 1
instance = comp, \Signal_Remainder[7]~DUPLICATE\, Signal_Remainder[7]~DUPLICATE, Divider, 1
instance = comp, \Divider_In[8]~I\, Divider_In[8], Divider, 1
instance = comp, \Signal_Divider[8]\, Signal_Divider[8], Divider, 1
instance = comp, \Add0~33\, Add0~33, Divider, 1
instance = comp, \Signal_Remainder~12\, Signal_Remainder~12, Divider, 1
instance = comp, \Signal_Remainder[8]\, Signal_Remainder[8], Divider, 1
instance = comp, \Add2~33\, Add2~33, Divider, 1
instance = comp, \Signal_Remainder~12DUPLICATE\, Signal_Remainder~12DUPLICATE, Divider, 1
instance = comp, \Signal_Remainder[8]~DUPLICATE\, Signal_Remainder[8]~DUPLICATE, Divider, 1
instance = comp, \Add0~37\, Add0~37, Divider, 1
instance = comp, \Add2~37\, Add2~37, Divider, 1
instance = comp, \Signal_Remainder~13\, Signal_Remainder~13, Divider, 1
instance = comp, \Signal_Remainder[9]\, Signal_Remainder[9], Divider, 1
instance = comp, \Divider_In[10]~I\, Divider_In[10], Divider, 1
instance = comp, \Signal_Divider[10]\, Signal_Divider[10], Divider, 1
instance = comp, \Add2~41\, Add2~41, Divider, 1
instance = comp, \Add0~41\, Add0~41, Divider, 1
instance = comp, \Signal_Remainder~14\, Signal_Remainder~14, Divider, 1
instance = comp, \Signal_Remainder[10]\, Signal_Remainder[10], Divider, 1
instance = comp, \Add0~45\, Add0~45, Divider, 1
instance = comp, \Add2~45\, Add2~45, Divider, 1
instance = comp, \Signal_Remainder~15DUPLICATE\, Signal_Remainder~15DUPLICATE, Divider, 1
instance = comp, \Signal_Remainder[11]~DUPLICATE\, Signal_Remainder[11]~DUPLICATE, Divider, 1
instance = comp, \Add2~49\, Add2~49, Divider, 1
instance = comp, \Add0~49\, Add0~49, Divider, 1
instance = comp, \Signal_Remainder~16DUPLICATE\, Signal_Remainder~16DUPLICATE, Divider, 1
instance = comp, \Signal_Remainder[12]~DUPLICATE\, Signal_Remainder[12]~DUPLICATE, Divider, 1
instance = comp, \Add0~53\, Add0~53, Divider, 1
instance = comp, \Add0~57\, Add0~57, Divider, 1
instance = comp, \Add2~53\, Add2~53, Divider, 1
instance = comp, \Signal_Remainder~17\, Signal_Remainder~17, Divider, 1
instance = comp, \Signal_Remainder[13]\, Signal_Remainder[13], Divider, 1
instance = comp, \Add2~57\, Add2~57, Divider, 1
instance = comp, \Signal_Remainder~18\, Signal_Remainder~18, Divider, 1
instance = comp, \Signal_Remainder[14]\, Signal_Remainder[14], Divider, 1
instance = comp, \Divider_In[15]~I\, Divider_In[15], Divider, 1
instance = comp, \Signal_Divider[15]\, Signal_Divider[15], Divider, 1
instance = comp, \Add2~61\, Add2~61, Divider, 1
instance = comp, \Add0~61\, Add0~61, Divider, 1
instance = comp, \Signal_Remainder~19\, Signal_Remainder~19, Divider, 1
instance = comp, \Signal_Remainder[15]\, Signal_Remainder[15], Divider, 1
instance = comp, \Add2~65\, Add2~65, Divider, 1
instance = comp, \Add0~65\, Add0~65, Divider, 1
instance = comp, \Signal_Remainder~20\, Signal_Remainder~20, Divider, 1
instance = comp, \Signal_Remainder[16]\, Signal_Remainder[16], Divider, 1
instance = comp, \Add0~69\, Add0~69, Divider, 1
instance = comp, \Add2~69\, Add2~69, Divider, 1
instance = comp, \Signal_Remainder~21\, Signal_Remainder~21, Divider, 1
instance = comp, \Signal_Remainder[17]\, Signal_Remainder[17], Divider, 1
instance = comp, \Add2~73\, Add2~73, Divider, 1
instance = comp, \Add0~73\, Add0~73, Divider, 1
instance = comp, \Signal_Remainder~22\, Signal_Remainder~22, Divider, 1
instance = comp, \Signal_Remainder[18]\, Signal_Remainder[18], Divider, 1
instance = comp, \Add0~77\, Add0~77, Divider, 1
instance = comp, \Add2~77\, Add2~77, Divider, 1
instance = comp, \Signal_Remainder~23\, Signal_Remainder~23, Divider, 1
instance = comp, \Signal_Remainder[19]\, Signal_Remainder[19], Divider, 1
instance = comp, \Divider_In[20]~I\, Divider_In[20], Divider, 1
instance = comp, \Signal_Divider[20]\, Signal_Divider[20], Divider, 1
instance = comp, \Add2~81\, Add2~81, Divider, 1
instance = comp, \Signal_Remainder~24\, Signal_Remainder~24, Divider, 1
instance = comp, \Signal_Remainder[20]\, Signal_Remainder[20], Divider, 1
instance = comp, \Add0~85\, Add0~85, Divider, 1
instance = comp, \Add2~85\, Add2~85, Divider, 1
instance = comp, \Signal_Remainder~25\, Signal_Remainder~25, Divider, 1
instance = comp, \Signal_Remainder[21]\, Signal_Remainder[21], Divider, 1
instance = comp, \Divider_In[22]~I\, Divider_In[22], Divider, 1
instance = comp, \Signal_Divider[22]\, Signal_Divider[22], Divider, 1
instance = comp, \Add0~89\, Add0~89, Divider, 1
instance = comp, \Add2~89\, Add2~89, Divider, 1
instance = comp, \Signal_Remainder~26\, Signal_Remainder~26, Divider, 1
instance = comp, \Signal_Remainder[22]\, Signal_Remainder[22], Divider, 1
instance = comp, \Add0~93\, Add0~93, Divider, 1
instance = comp, \Add2~93\, Add2~93, Divider, 1
instance = comp, \Signal_Remainder~27\, Signal_Remainder~27, Divider, 1
instance = comp, \Signal_Remainder[23]\, Signal_Remainder[23], Divider, 1
instance = comp, \Add2~97\, Add2~97, Divider, 1
instance = comp, \Add0~97\, Add0~97, Divider, 1
instance = comp, \Signal_Remainder~28\, Signal_Remainder~28, Divider, 1
instance = comp, \Signal_Remainder[24]\, Signal_Remainder[24], Divider, 1
instance = comp, \Divider_In[25]~I\, Divider_In[25], Divider, 1
instance = comp, \Signal_Divider[25]\, Signal_Divider[25], Divider, 1
instance = comp, \Add0~101\, Add0~101, Divider, 1
instance = comp, \Add2~101\, Add2~101, Divider, 1
instance = comp, \Signal_Remainder~29\, Signal_Remainder~29, Divider, 1
instance = comp, \Signal_Remainder[25]\, Signal_Remainder[25], Divider, 1
instance = comp, \Add2~105\, Add2~105, Divider, 1
instance = comp, \Add0~105\, Add0~105, Divider, 1
instance = comp, \Signal_Remainder~30\, Signal_Remainder~30, Divider, 1
instance = comp, \Signal_Remainder[26]\, Signal_Remainder[26], Divider, 1
instance = comp, \Add0~109\, Add0~109, Divider, 1
instance = comp, \Add2~109\, Add2~109, Divider, 1
instance = comp, \Signal_Remainder~31\, Signal_Remainder~31, Divider, 1
instance = comp, \Signal_Remainder[27]\, Signal_Remainder[27], Divider, 1
instance = comp, \Divider_In[28]~I\, Divider_In[28], Divider, 1
instance = comp, \Signal_Divider[28]\, Signal_Divider[28], Divider, 1
instance = comp, \Add2~113\, Add2~113, Divider, 1
instance = comp, \Add0~113\, Add0~113, Divider, 1
instance = comp, \Signal_Remainder~32\, Signal_Remainder~32, Divider, 1
instance = comp, \Signal_Remainder[28]\, Signal_Remainder[28], Divider, 1
instance = comp, \Add0~117\, Add0~117, Divider, 1
instance = comp, \Add0~121\, Add0~121, Divider, 1
instance = comp, \Add2~117\, Add2~117, Divider, 1
instance = comp, \Signal_Remainder~33\, Signal_Remainder~33, Divider, 1
instance = comp, \Signal_Remainder[29]\, Signal_Remainder[29], Divider, 1
instance = comp, \Add2~121\, Add2~121, Divider, 1
instance = comp, \Signal_Remainder~34\, Signal_Remainder~34, Divider, 1
instance = comp, \Signal_Remainder[30]\, Signal_Remainder[30], Divider, 1
instance = comp, \Divider_In[31]~I\, Divider_In[31], Divider, 1
instance = comp, \Signal_Divider[31]\, Signal_Divider[31], Divider, 1
instance = comp, \Add2~125\, Add2~125, Divider, 1
instance = comp, \Add0~125\, Add0~125, Divider, 1
instance = comp, \Signal_Remainder~35\, Signal_Remainder~35, Divider, 1
instance = comp, \Signal_Remainder[31]\, Signal_Remainder[31], Divider, 1
instance = comp, \Add0~129\, Add0~129, Divider, 1
instance = comp, \Add2~129\, Add2~129, Divider, 1
instance = comp, \Signal_Remainder~36\, Signal_Remainder~36, Divider, 1
instance = comp, \Signal_Remainder[32]\, Signal_Remainder[32], Divider, 1
instance = comp, \Add0~133\, Add0~133, Divider, 1
instance = comp, \Add2~133\, Add2~133, Divider, 1
instance = comp, \Signal_Remainder~37\, Signal_Remainder~37, Divider, 1
instance = comp, \Signal_Remainder[33]\, Signal_Remainder[33], Divider, 1
instance = comp, \Signal_Quotient~3\, Signal_Quotient~3, Divider, 1
instance = comp, \State.SubstractState\, State.SubstractState, Divider, 1
instance = comp, \Signal_Quotient~0\, Signal_Quotient~0, Divider, 1
instance = comp, \Signal_Quotient~1\, Signal_Quotient~1, Divider, 1
instance = comp, \Signal_Quotient[0]\, Signal_Quotient[0], Divider, 1
instance = comp, \Quotient[0]$latch\, Quotient[0]$latch, Divider, 1
instance = comp, \Decoder0~1\, Decoder0~1, Divider, 1
instance = comp, \Signal_Quotient~2\, Signal_Quotient~2, Divider, 1
instance = comp, \Signal_Quotient[1]\, Signal_Quotient[1], Divider, 1
instance = comp, \Quotient[1]$latch\, Quotient[1]$latch, Divider, 1
instance = comp, \Decoder0~2\, Decoder0~2, Divider, 1
instance = comp, \Signal_Quotient~4\, Signal_Quotient~4, Divider, 1
instance = comp, \Signal_Quotient[2]\, Signal_Quotient[2], Divider, 1
instance = comp, \Quotient[2]$latch\, Quotient[2]$latch, Divider, 1
instance = comp, \Decoder0~3\, Decoder0~3, Divider, 1
instance = comp, \Signal_Quotient~5\, Signal_Quotient~5, Divider, 1
instance = comp, \Signal_Quotient[3]\, Signal_Quotient[3], Divider, 1
instance = comp, \Quotient[3]$latch\, Quotient[3]$latch, Divider, 1
instance = comp, \Decoder0~4\, Decoder0~4, Divider, 1
instance = comp, \Signal_Quotient~6\, Signal_Quotient~6, Divider, 1
instance = comp, \Signal_Quotient[4]\, Signal_Quotient[4], Divider, 1
instance = comp, \Quotient[4]$latch\, Quotient[4]$latch, Divider, 1
instance = comp, \Signal_Quotient~7\, Signal_Quotient~7, Divider, 1
instance = comp, \Signal_Quotient[5]\, Signal_Quotient[5], Divider, 1
instance = comp, \Quotient[5]$latch\, Quotient[5]$latch, Divider, 1
instance = comp, \Signal_Quotient~8\, Signal_Quotient~8, Divider, 1
instance = comp, \Signal_Quotient[6]\, Signal_Quotient[6], Divider, 1
instance = comp, \Quotient[6]$latch\, Quotient[6]$latch, Divider, 1
instance = comp, \Signal_Quotient~9\, Signal_Quotient~9, Divider, 1
instance = comp, \Signal_Quotient[7]\, Signal_Quotient[7], Divider, 1
instance = comp, \Quotient[7]$latch\, Quotient[7]$latch, Divider, 1
instance = comp, \Decoder0~5\, Decoder0~5, Divider, 1
instance = comp, \Signal_Quotient~10\, Signal_Quotient~10, Divider, 1
instance = comp, \Signal_Quotient[8]\, Signal_Quotient[8], Divider, 1
instance = comp, \Quotient[8]$latch\, Quotient[8]$latch, Divider, 1
instance = comp, \Signal_Quotient~11\, Signal_Quotient~11, Divider, 1
instance = comp, \Signal_Quotient[9]\, Signal_Quotient[9], Divider, 1
instance = comp, \Quotient[9]$latch\, Quotient[9]$latch, Divider, 1
instance = comp, \Signal_Quotient~12\, Signal_Quotient~12, Divider, 1
instance = comp, \Signal_Quotient[10]\, Signal_Quotient[10], Divider, 1
instance = comp, \Quotient[10]$latch\, Quotient[10]$latch, Divider, 1
instance = comp, \Signal_Quotient~13\, Signal_Quotient~13, Divider, 1
instance = comp, \Signal_Quotient[11]\, Signal_Quotient[11], Divider, 1
instance = comp, \Quotient[11]$latch\, Quotient[11]$latch, Divider, 1
instance = comp, \Signal_Quotient~14\, Signal_Quotient~14, Divider, 1
instance = comp, \Signal_Quotient[12]\, Signal_Quotient[12], Divider, 1
instance = comp, \Quotient[12]$latch\, Quotient[12]$latch, Divider, 1
instance = comp, \Signal_Quotient~15\, Signal_Quotient~15, Divider, 1
instance = comp, \Signal_Quotient[13]\, Signal_Quotient[13], Divider, 1
instance = comp, \Quotient[13]$latch\, Quotient[13]$latch, Divider, 1
instance = comp, \Signal_Quotient~16\, Signal_Quotient~16, Divider, 1
instance = comp, \Signal_Quotient[14]\, Signal_Quotient[14], Divider, 1
instance = comp, \Quotient[14]$latch\, Quotient[14]$latch, Divider, 1
instance = comp, \Signal_Quotient~17\, Signal_Quotient~17, Divider, 1
instance = comp, \Signal_Quotient[15]\, Signal_Quotient[15], Divider, 1
instance = comp, \Quotient[15]$latch\, Quotient[15]$latch, Divider, 1
instance = comp, \Signal_Quotient~18\, Signal_Quotient~18, Divider, 1
instance = comp, \Signal_Quotient[16]\, Signal_Quotient[16], Divider, 1
instance = comp, \Quotient[16]$latch\, Quotient[16]$latch, Divider, 1
instance = comp, \Signal_Quotient~19\, Signal_Quotient~19, Divider, 1
instance = comp, \Signal_Quotient[17]\, Signal_Quotient[17], Divider, 1
instance = comp, \Quotient[17]$latch\, Quotient[17]$latch, Divider, 1
instance = comp, \Decoder0~6\, Decoder0~6, Divider, 1
instance = comp, \Signal_Quotient~20\, Signal_Quotient~20, Divider, 1
instance = comp, \Signal_Quotient[18]\, Signal_Quotient[18], Divider, 1
instance = comp, \Quotient[18]$latch\, Quotient[18]$latch, Divider, 1
instance = comp, \Signal_Quotient~21\, Signal_Quotient~21, Divider, 1
instance = comp, \Signal_Quotient[19]\, Signal_Quotient[19], Divider, 1
instance = comp, \Quotient[19]$latch\, Quotient[19]$latch, Divider, 1
instance = comp, \Decoder0~7\, Decoder0~7, Divider, 1
instance = comp, \Signal_Quotient~22\, Signal_Quotient~22, Divider, 1
instance = comp, \Signal_Quotient[20]\, Signal_Quotient[20], Divider, 1
instance = comp, \Quotient[20]$latch\, Quotient[20]$latch, Divider, 1
instance = comp, \Signal_Quotient~23\, Signal_Quotient~23, Divider, 1
instance = comp, \Signal_Quotient[21]\, Signal_Quotient[21], Divider, 1
instance = comp, \Quotient[21]$latch\, Quotient[21]$latch, Divider, 1
instance = comp, \Signal_Quotient~24\, Signal_Quotient~24, Divider, 1
instance = comp, \Signal_Quotient[22]\, Signal_Quotient[22], Divider, 1
instance = comp, \Quotient[22]$latch\, Quotient[22]$latch, Divider, 1
instance = comp, \Signal_Quotient~25\, Signal_Quotient~25, Divider, 1
instance = comp, \Signal_Quotient[23]\, Signal_Quotient[23], Divider, 1
instance = comp, \Quotient[23]$latch\, Quotient[23]$latch, Divider, 1
instance = comp, \Signal_Quotient~26\, Signal_Quotient~26, Divider, 1
instance = comp, \Signal_Quotient[24]\, Signal_Quotient[24], Divider, 1
instance = comp, \Quotient[24]$latch\, Quotient[24]$latch, Divider, 1
instance = comp, \Signal_Quotient~27\, Signal_Quotient~27, Divider, 1
instance = comp, \Signal_Quotient[25]\, Signal_Quotient[25], Divider, 1
instance = comp, \Quotient[25]$latch\, Quotient[25]$latch, Divider, 1
instance = comp, \Signal_Quotient~28\, Signal_Quotient~28, Divider, 1
instance = comp, \Signal_Quotient[26]\, Signal_Quotient[26], Divider, 1
instance = comp, \Quotient[26]$latch\, Quotient[26]$latch, Divider, 1
instance = comp, \Signal_Quotient~29\, Signal_Quotient~29, Divider, 1
instance = comp, \Signal_Quotient[27]\, Signal_Quotient[27], Divider, 1
instance = comp, \Quotient[27]$latch\, Quotient[27]$latch, Divider, 1
instance = comp, \Signal_Quotient~30\, Signal_Quotient~30, Divider, 1
instance = comp, \Signal_Quotient[28]\, Signal_Quotient[28], Divider, 1
instance = comp, \Quotient[28]$latch\, Quotient[28]$latch, Divider, 1
instance = comp, \Signal_Quotient~31\, Signal_Quotient~31, Divider, 1
instance = comp, \Signal_Quotient[29]\, Signal_Quotient[29], Divider, 1
instance = comp, \Quotient[29]$latch\, Quotient[29]$latch, Divider, 1
instance = comp, \Signal_Quotient~32\, Signal_Quotient~32, Divider, 1
instance = comp, \Signal_Quotient[30]\, Signal_Quotient[30], Divider, 1
instance = comp, \Quotient[30]$latch\, Quotient[30]$latch, Divider, 1
instance = comp, \Signal_Quotient~33\, Signal_Quotient~33, Divider, 1
instance = comp, \Signal_Quotient[31]\, Signal_Quotient[31], Divider, 1
instance = comp, \Quotient[31]$latch\, Quotient[31]$latch, Divider, 1
instance = comp, \Remainder[0]$latch\, Remainder[0]$latch, Divider, 1
instance = comp, \Remainder[1]$latch\, Remainder[1]$latch, Divider, 1
instance = comp, \Remainder[2]$latch\, Remainder[2]$latch, Divider, 1
instance = comp, \Remainder[3]$latch\, Remainder[3]$latch, Divider, 1
instance = comp, \Remainder[4]$latch\, Remainder[4]$latch, Divider, 1
instance = comp, \Remainder[5]$latch\, Remainder[5]$latch, Divider, 1
instance = comp, \Remainder[6]$latch\, Remainder[6]$latch, Divider, 1
instance = comp, \Remainder[7]$latch\, Remainder[7]$latch, Divider, 1
instance = comp, \Remainder[8]$latch\, Remainder[8]$latch, Divider, 1
instance = comp, \Signal_Remainder~13DUPLICATE\, Signal_Remainder~13DUPLICATE, Divider, 1
instance = comp, \Signal_Remainder[9]~DUPLICATE\, Signal_Remainder[9]~DUPLICATE, Divider, 1
instance = comp, \Remainder[9]$latch\, Remainder[9]$latch, Divider, 1
instance = comp, \Remainder[10]$latch\, Remainder[10]$latch, Divider, 1
instance = comp, \Remainder[11]$latch\, Remainder[11]$latch, Divider, 1
instance = comp, \Signal_Remainder~16\, Signal_Remainder~16, Divider, 1
instance = comp, \Signal_Remainder[12]\, Signal_Remainder[12], Divider, 1
instance = comp, \Remainder[12]$latch\, Remainder[12]$latch, Divider, 1
instance = comp, \Remainder[13]$latch\, Remainder[13]$latch, Divider, 1
instance = comp, \Remainder[14]$latch\, Remainder[14]$latch, Divider, 1
instance = comp, \Remainder[15]$latch\, Remainder[15]$latch, Divider, 1
instance = comp, \Remainder[16]$latch\, Remainder[16]$latch, Divider, 1
instance = comp, \Remainder[17]$latch\, Remainder[17]$latch, Divider, 1
instance = comp, \Remainder[18]$latch\, Remainder[18]$latch, Divider, 1
instance = comp, \Remainder[19]$latch\, Remainder[19]$latch, Divider, 1
instance = comp, \Remainder[20]$latch\, Remainder[20]$latch, Divider, 1
instance = comp, \Remainder[21]$latch\, Remainder[21]$latch, Divider, 1
instance = comp, \Remainder[22]$latch\, Remainder[22]$latch, Divider, 1
instance = comp, \Remainder[23]$latch\, Remainder[23]$latch, Divider, 1
instance = comp, \Remainder[24]$latch\, Remainder[24]$latch, Divider, 1
instance = comp, \Signal_Remainder~29DUPLICATE\, Signal_Remainder~29DUPLICATE, Divider, 1
instance = comp, \Signal_Remainder[25]~DUPLICATE\, Signal_Remainder[25]~DUPLICATE, Divider, 1
instance = comp, \Remainder[25]$latch\, Remainder[25]$latch, Divider, 1
instance = comp, \Remainder[26]$latch\, Remainder[26]$latch, Divider, 1
instance = comp, \Remainder[27]$latch\, Remainder[27]$latch, Divider, 1
instance = comp, \Remainder[28]$latch\, Remainder[28]$latch, Divider, 1
instance = comp, \Remainder[29]$latch\, Remainder[29]$latch, Divider, 1
instance = comp, \Remainder[30]$latch\, Remainder[30]$latch, Divider, 1
instance = comp, \Remainder[31]$latch\, Remainder[31]$latch, Divider, 1
instance = comp, \Equal1~0\, Equal1~0, Divider, 1
instance = comp, \Equal1~4\, Equal1~4, Divider, 1
instance = comp, \Equal1~3\, Equal1~3, Divider, 1
instance = comp, \Equal1~1\, Equal1~1, Divider, 1
instance = comp, \Equal1~5\, Equal1~5, Divider, 1
instance = comp, \Equal1~2\, Equal1~2, Divider, 1
instance = comp, \Equal1~6\, Equal1~6, Divider, 1
instance = comp, \Quotient[0]~I\, Quotient[0], Divider, 1
instance = comp, \Quotient[1]~I\, Quotient[1], Divider, 1
instance = comp, \Quotient[2]~I\, Quotient[2], Divider, 1
instance = comp, \Quotient[3]~I\, Quotient[3], Divider, 1
instance = comp, \Quotient[4]~I\, Quotient[4], Divider, 1
instance = comp, \Quotient[5]~I\, Quotient[5], Divider, 1
instance = comp, \Quotient[6]~I\, Quotient[6], Divider, 1
instance = comp, \Quotient[7]~I\, Quotient[7], Divider, 1
instance = comp, \Quotient[8]~I\, Quotient[8], Divider, 1
instance = comp, \Quotient[9]~I\, Quotient[9], Divider, 1
instance = comp, \Quotient[10]~I\, Quotient[10], Divider, 1
instance = comp, \Quotient[11]~I\, Quotient[11], Divider, 1
instance = comp, \Quotient[12]~I\, Quotient[12], Divider, 1
instance = comp, \Quotient[13]~I\, Quotient[13], Divider, 1
instance = comp, \Quotient[14]~I\, Quotient[14], Divider, 1
instance = comp, \Quotient[15]~I\, Quotient[15], Divider, 1
instance = comp, \Quotient[16]~I\, Quotient[16], Divider, 1
instance = comp, \Quotient[17]~I\, Quotient[17], Divider, 1
instance = comp, \Quotient[18]~I\, Quotient[18], Divider, 1
instance = comp, \Quotient[19]~I\, Quotient[19], Divider, 1
instance = comp, \Quotient[20]~I\, Quotient[20], Divider, 1
instance = comp, \Quotient[21]~I\, Quotient[21], Divider, 1
instance = comp, \Quotient[22]~I\, Quotient[22], Divider, 1
instance = comp, \Quotient[23]~I\, Quotient[23], Divider, 1
instance = comp, \Quotient[24]~I\, Quotient[24], Divider, 1
instance = comp, \Quotient[25]~I\, Quotient[25], Divider, 1
instance = comp, \Quotient[26]~I\, Quotient[26], Divider, 1
instance = comp, \Quotient[27]~I\, Quotient[27], Divider, 1
instance = comp, \Quotient[28]~I\, Quotient[28], Divider, 1
instance = comp, \Quotient[29]~I\, Quotient[29], Divider, 1
instance = comp, \Quotient[30]~I\, Quotient[30], Divider, 1
instance = comp, \Quotient[31]~I\, Quotient[31], Divider, 1
instance = comp, \Remainder[0]~I\, Remainder[0], Divider, 1
instance = comp, \Remainder[1]~I\, Remainder[1], Divider, 1
instance = comp, \Remainder[2]~I\, Remainder[2], Divider, 1
instance = comp, \Remainder[3]~I\, Remainder[3], Divider, 1
instance = comp, \Remainder[4]~I\, Remainder[4], Divider, 1
instance = comp, \Remainder[5]~I\, Remainder[5], Divider, 1
instance = comp, \Remainder[6]~I\, Remainder[6], Divider, 1
instance = comp, \Remainder[7]~I\, Remainder[7], Divider, 1
instance = comp, \Remainder[8]~I\, Remainder[8], Divider, 1
instance = comp, \Remainder[9]~I\, Remainder[9], Divider, 1
instance = comp, \Remainder[10]~I\, Remainder[10], Divider, 1
instance = comp, \Remainder[11]~I\, Remainder[11], Divider, 1
instance = comp, \Remainder[12]~I\, Remainder[12], Divider, 1
instance = comp, \Remainder[13]~I\, Remainder[13], Divider, 1
instance = comp, \Remainder[14]~I\, Remainder[14], Divider, 1
instance = comp, \Remainder[15]~I\, Remainder[15], Divider, 1
instance = comp, \Remainder[16]~I\, Remainder[16], Divider, 1
instance = comp, \Remainder[17]~I\, Remainder[17], Divider, 1
instance = comp, \Remainder[18]~I\, Remainder[18], Divider, 1
instance = comp, \Remainder[19]~I\, Remainder[19], Divider, 1
instance = comp, \Remainder[20]~I\, Remainder[20], Divider, 1
instance = comp, \Remainder[21]~I\, Remainder[21], Divider, 1
instance = comp, \Remainder[22]~I\, Remainder[22], Divider, 1
instance = comp, \Remainder[23]~I\, Remainder[23], Divider, 1
instance = comp, \Remainder[24]~I\, Remainder[24], Divider, 1
instance = comp, \Remainder[25]~I\, Remainder[25], Divider, 1
instance = comp, \Remainder[26]~I\, Remainder[26], Divider, 1
instance = comp, \Remainder[27]~I\, Remainder[27], Divider, 1
instance = comp, \Remainder[28]~I\, Remainder[28], Divider, 1
instance = comp, \Remainder[29]~I\, Remainder[29], Divider, 1
instance = comp, \Remainder[30]~I\, Remainder[30], Divider, 1
instance = comp, \Remainder[31]~I\, Remainder[31], Divider, 1
instance = comp, \Done~I\, Done, Divider, 1
instance = comp, \error~I\, error, Divider, 1
